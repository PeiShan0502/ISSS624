---
title: "In-class Exercise 5"
---

install development version of spflow package.

```{r}
#| eval: false
devtools::install_github("LukeCe/spflow")
```

Next, we will load spflow and other R packages into R environment.

```{r}
#| eval: false
pacman::p_load(tmap, sf, spdep, sp, Matrix,
               spflow, reshape2, knitr,
               tidyverse)
```

## Data Preparation

Before we can calibrate Spatial Econometric Interaction Models by using **spflow** package, three data sets are required. They are:

-   a spatial weights

-   a tibble data frame consisting of the origins, destinations, flows and distances between the origins and destinations,

-   a tibble data frame consisting of the explanatory variables.

Building the geographical area

For the purpose of this study, URA Master Planning 2019 Planning Subzone GIS data will be used.

```{r}
#| eval: false
mpsz <- st_read(dsn = "data/geospatial", 
                layer = "MPSZ-2019") %>%
  st_transform(crs = 3414)
```

ONLY FACTOR DATA TYPE WILL BE DUMMY VARAIBLE IN REGRESSION MODEL

IF NUMERIC FIELD - WILL BE TREATED AS CONTINUOUS VARIABLE IN REGRESSION MODEL

SUBZONE_C: chr field

by knn: 6 if you using hexagon

```{r}
#| eval: false
::: callout note

:::
```

```{r}
#| eval: false
mpsz_nb <- read_rds("data/rds/mpsz_nb.rds")
mpsz_flow <- read_rds("data/rds/mpsz_flow.rds")
mpsz_var <- read_rds("data/rds/mpsz_var.rds")
```

For our model, we choose the contiguity based neighbourhood structure:

```{r}
#| eval: false
mpsz_net <- spflow_network(
  id_net = "sg", 
  node_neighbourhood =
    nb2mat(mpsz_nb$by_contiguity),
  node_data = mpsz_var,
  node_key_column = "SZ_CODE")

mpsz_net

```

```{r}
#| eval: false
mpsz_net_pairs <- spflow_network_pair(
  id_orig_net = "sg",
  id_dest_net = "sg",
  pair_data = mpsz_flow,
  orig_key_column = "ORIGIN_Sz",
  dest_key_column = "DEST_SZ")

mpsz_net_pairs
```

```{r}
#| eval: false
mps_multi_net <- spflow_network_multi(mpsz_net, mpsz_net_pairs)
```

purpose of correlogram: detect multicollinearity, see if you have any suitable explanatory variables.

P\_ refers to impedience (distance/transport cost/travelling time)

```{r}
#| eval: false
base_model <- spflow(
  spflow_formula = log(1+TRIPS) ~
    O_(BUSSTOP_COUNT + AGE25_64) +
    D_(SCHOOL_COUNT + )
)


```

log(1 + \_\_\_\_) usually +1 to avoid log(0)
